// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Content for Event documents
 */
interface EventDocumentData {
  /**
   * Title field in *Event*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: event.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  title: prismic.KeyTextField;

  /**
   * Speaker field in *Event*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: event.speaker
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  speaker: prismic.LinkField;

  /**
   * Image field in *Event*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: event.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Start Time field in *Event*
   *
   * - **Field Type**: Timestamp
   * - **Placeholder**: *None*
   * - **API ID Path**: event.start_time
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#timestamp
   */
  start_time: prismic.TimestampField;

  /**
   * End Time field in *Event*
   *
   * - **Field Type**: Timestamp
   * - **Placeholder**: *None*
   * - **API ID Path**: event.end_time
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#timestamp
   */
  end_time: prismic.TimestampField;

  /**
   * Description field in *Event*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: event.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  description: prismic.KeyTextField;

  /**
   * Recording field in *Event*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: event.recording
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  recording: prismic.LinkField;
}

/**
 * Event document from Prismic
 *
 * - **API ID**: `event`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type EventDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<EventDocumentData>, "event", Lang>;

/**
 * Content for Game documents
 */
interface GameDocumentData {
  /**
   * Name field in *Game*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: game.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  name: prismic.KeyTextField;

  /**
   * DaysLeft field in *Game*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: game.daysleft
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#number
   */
  daysleft: prismic.NumberField;

  /**
   * dateStart field in *Game*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: game.datestart
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#date
   */
  datestart: prismic.DateField;

  /**
   * image field in *Game*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: game.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * link field in *Game*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: game.link
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;

  /**
   * description field in *Game*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: game.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  description: prismic.KeyTextField;

  /**
   * instructions field in *Game*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: game.instructions
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  instructions: prismic.KeyTextField;
}

/**
 * Game document from Prismic
 *
 * - **API ID**: `game`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type GameDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<GameDocumentData>, "game", Lang>;

/**
 * Item in *Innovator → Innovators*
 */
export interface InnovatorDocumentDataInnovatorsItem {
  /**
   * Image field in *Innovator → Innovators*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: innovator.innovators[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Name field in *Innovator → Innovators*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: innovator.innovators[].name
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  name: prismic.KeyTextField;

  /**
   * Individual Tagline field in *Innovator → Innovators*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: innovator.innovators[].individual_tagline
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  individual_tagline: prismic.KeyTextField;
}

type InnovatorDocumentDataSlicesSlice = never;

/**
 * Content for Innovator documents
 */
interface InnovatorDocumentData {
  /**
   * Name field in *Innovator*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: innovator.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  name: prismic.KeyTextField;

  /**
   * Description field in *Innovator*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: innovator.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  description: prismic.KeyTextField;

  /**
   * Image field in *Innovator*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: innovator.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Innovators field in *Innovator*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: innovator.innovators[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  innovators: prismic.GroupField<Simplify<InnovatorDocumentDataInnovatorsItem>>;

  /**
   * Slice Zone field in *Innovator*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: innovator.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<InnovatorDocumentDataSlicesSlice>;
}

/**
 * Innovator document from Prismic
 *
 * - **API ID**: `innovator`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type InnovatorDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<InnovatorDocumentData>,
    "innovator",
    Lang
  >;

/**
 * Item in *Speaker → Links*
 */
export interface SpeakerDocumentDataLinksItem {
  /**
   * Text field in *Speaker → Links*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: speaker.links[].text
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  text: prismic.KeyTextField;

  /**
   * Link field in *Speaker → Links*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: speaker.links[].link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;
}

/**
 * Content for Speaker documents
 */
interface SpeakerDocumentData {
  /**
   * Name field in *Speaker*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: speaker.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  name: prismic.KeyTextField;

  /**
   * Title field in *Speaker*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: speaker.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  title: prismic.KeyTextField;

  /**
   * Description field in *Speaker*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: speaker.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  description: prismic.KeyTextField;

  /**
   * Image field in *Speaker*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: speaker.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Links field in *Speaker*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: speaker.links[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  links: prismic.GroupField<Simplify<SpeakerDocumentDataLinksItem>>;
}

/**
 * Speaker document from Prismic
 *
 * - **API ID**: `speaker`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SpeakerDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<SpeakerDocumentData>,
    "speaker",
    Lang
  >;

export type AllDocumentTypes =
  | EventDocument
  | GameDocument
  | InnovatorDocument
  | SpeakerDocument;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      EventDocument,
      EventDocumentData,
      GameDocument,
      GameDocumentData,
      InnovatorDocument,
      InnovatorDocumentData,
      InnovatorDocumentDataInnovatorsItem,
      InnovatorDocumentDataSlicesSlice,
      SpeakerDocument,
      SpeakerDocumentData,
      SpeakerDocumentDataLinksItem,
      AllDocumentTypes,
    };
  }
}
